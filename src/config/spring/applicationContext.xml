<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- ====================================================================================== -->
	<!-- ================================启用基于注解（Annotation-based）的配置 -->
	<!-- ====================================================================================== -->
	<context:annotation-config />

	<!-- ====================================================================================== -->
	<!-- ================================启用Spring对@AspectJ切面配置的支持 -->
	<!-- ====================================================================================== 
		<aop:aspectj-autoproxy /> -->

	<!-- ====================================================================================== -->
	<!-- ================================启用Spring对@Transactional织入事务管理切面 -->
	<!-- ====================================================================================== -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ====================================================================================== -->
	<!-- ================================配置数据连接 (可多配) ================================= -->
	<!-- ====================================================================================== -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/mybatis/sql-map.properties</value>
			</list>
		</property>
	</bean>
	
	<!--配置一个数据源,根据上面szcgmpf.properties去找数据库连接的配置信息-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${mis.driverClassName}" />
		<property name="url" value="${mis.url}" />
		<property name="username" value="${mis.username}" />
		<property name="password" value="${mis.password}" />
	</bean>
	
	
	<!-- ====================================================================================== -->
	<!-- ================================配置 sqlSessionFactory =============================== -->
	<!-- ====================================================================================== -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/mybatis/sql_map.xml" />
	</bean>
	
	<!-- SqlSessionTemplate是MyBatis-Spring的核心。 -->
	<!-- 这个类负责管理MyBatis的SqlSession,调用MyBatis的SQL方法，翻译异常。SqlSessionTemplate是线程安全的，可以被多个DAO所共享使用。 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
		<constructor-arg index="0" ref="sqlSessionFactory" /> 
	</bean>
	
	<!-- ====================================================================================== -->
	<!-- ================================配置 基于数据源的事务管理器 -->
	<!-- ====================================================================================== -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="load*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="stat*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="find*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="list*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="search*">PROPAGATION_REQUIRED, readOnly, -Exception</prop>
				<prop key="*">PROPAGATION_REQUIRED, -Exception</prop>
			</props>
		</property>
	</bean>
	
	<!-- 开启组件扫描 -->
	<context:component-scan base-package="com.bmtech.pushmessage.dao.impl" />
	<context:component-scan base-package="com.bmtech.pushmessage.service.impl" />	
	<context:component-scan base-package="com.bmtech.pushmessage.controller" />	
	
</beans>